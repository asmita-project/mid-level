app.get('/products', (req, res) => {
    const sql = 'SELECT id, name, description FROM products';

    connection.query(sql, (err, products) => {
        if (err) {
            console.error('Error executing products query:', err);
            res.status(500).json({ error: 'Failed to fetch products' });
            return;
        }

        // Array to hold final product data with category data
        const productsWithCategory = [];

        // Fetch category data for each product
        const getCategoryData = (productId) => {
            return new Promise((resolve, reject) => {
                const categorySql = 'SELECT name FROM categories WHERE id = ?';
                connection.query(categorySql, [productId], (err, category) => {
                    if (err) {
                        reject(err);
                        return;
                    }
                    resolve(category[0]?.name || 'Unknown');
                });
            });
        };

        // Fetch category data for each product asynchronously
        Promise.all(products.map(product => getCategoryData(product.id)))
            .then(categoryNames => {
                // Combine product data with category data
                products.forEach((product, index) => {
                    productsWithCategory.push({
                        id: product.id,
                        name: product.name,
                        description: product.description,
                        category: categoryNames[index]
                    });
                });
                
                res.json(productsWithCategory);
            })
            .catch(error => {
                console.error('Error fetching category data:', error);
                res.status(500).json({ error: 'Failed to fetch category data' });
            });
    });
});